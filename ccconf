#!/usr/bin/env perl

our $CTAGS = 'ctags';
our $CDEPS = 'c++ -MM';

use strict;
use List::Util qw/max/;

$0 =~ s/.*\/(.+)$/$1/;

my @sources = <*.cc *.cpp>;
my @cfiles = <*.c>;
if (!scalar @sources and !scalar @cfiles) {
	die "$0: error: No C/C++ source file found\n";
}

my @objects = ();
for (@sources, @cfiles) {
	/(.+)(?:\.cc|\.cpp|\.c)$/;
	push @objects, $1 . '.o';
}

my $program = $sources[0];
$program =~ s/(.+)(?:\.cc|\.cpp|\.c)$/$1/;
my %options = ();

if (not open MAKEFILE, '>', 'Makefile') {
	die "$0: error: Failed to write to Makefile: $!\n";
}

select MAKEFILE;

print "# $0 @ARGV\n\n";

my $pgm_def = 0;
while ($_ = shift) {
	if (/(.+?)\+=(.*)/) {
		$options{$1} .= ' ' . $2;
	} elsif (/(.+?)=(.*)/) {
		$options{$1} = $2;
	} elsif (/^\+(.*)/) {
		$options{CFLAGS} .= `pkg-config --cflags $1`;
		exit 1 if $?;
		chomp $options{CFLAGS};
		$options{LDFLAGS} .= `pkg-config --libs $1`;
		chomp $options{LDFLAGS};
	} elsif (/^\-(.*)/) {
		$options{LDFLAGS} .= "-l$1";
	} else {
		if (not $pgm_def) {
			$program = $_;
			$pgm_def = 1;
		} else {
			warn "$0: warning: unused argument -- $_\n";
		}
	}
}

# Generates the Makefile

my $lkey = max map { length $_ } keys %options;
while (my ($key, $value) = each %options) {
	printf "%-${lkey}s = %s\n", $key, $value;
}

print qq{
.PHONY : all clean
all : $program
clean :
	rm -f $program @objects tags

tags : *.h @sources @cfiles
	$CTAGS *.h @sources @cfiles

$program : @objects
};

if (scalar @sources) {
	print "\t\$(CXX) \$(LDFLAGS) -o $program @objects\n";
} else {
	print "\t\$(CC) \$(LDFLAGS) -o $program @objects\n";
}

for (@sources, @cfiles) {
	print `$CDEPS $_`;
}

